{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchField","searchChange","className","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","logComponentStackToMyService","errorInfo","console","log","state","logErrors","setState","toString","hasError","error","info","componentStack","this","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iDCiBCQ,EArBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,YCUTC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,8BACI,uBACIC,UAAU,2BACVC,KAAK,SACLC,YAAY,uBACZC,SAAUJ,OCFXK,EALA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,YAAaC,OAAQ,SAA/D,SAA0EJ,K,OCsCnEK,E,kDAtCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,6BAA+B,SAACC,GAC5BC,QAAQC,IAAI,EAAKC,MAAMC,WACvB,EAAKC,SAAS,CACVD,UAAU,GAAD,mBACF,EAAKD,MAAMC,WADT,CAELJ,EAAUM,eAEf,kBAAML,QAAQC,IAAI,MAAO,EAAKC,MAAMC,UAAU,QAdjD,EAAKD,MAAQ,CACTI,UAAU,EACVH,UAAW,IAJA,E,qDAmBnB,SAAkBI,EAAOC,GACrBR,QAAQC,IAAIO,EAAKC,gBACjBC,KAAKZ,6BAA6BU,EAAKC,kB,oBAO3C,WAEI,OAAGC,KAAKR,MAAMI,SAEH,oBAAIpB,UAAU,cAAd,4CAEJwB,KAAKb,MAAMN,Y,uCAVtB,SAAgCgB,GAC5B,MAAO,CAAED,UAAU,O,GA3BAK,aC6CZC,E,kDAzCX,aAAgB,IAAD,8BACX,gBAYJC,eAAiB,SAACC,GACd,EAAKV,SAAS,CAACW,YAAaD,EAAME,OAAOC,SAZzC,EAAKf,MAAQ,CACTrB,OAAQ,GACRkC,YAAa,IAJN,E,qDAOf,WAAqB,IAAD,OAChBG,MAAM,8CACD5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKjB,SAAS,CAACvB,OAAQwC,S,oBAM9C,WACI,MAA8BX,KAAKR,MAA5BrB,EAAP,EAAOA,OAAQkC,EAAf,EAAeA,YACTO,EAAiBzC,EAAO0C,QAAQ,SAAAC,GAClC,OAAOA,EAAMC,KAAKC,cAAcC,SAASZ,EAAYW,kBAEzD,OAAK7C,EAAO+C,OAIJ,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,iBAAd,yBACI,cAAC,EAAD,CAAWD,aAAcyB,KAAKG,iBAClC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhC,OAAQyC,WAR3B,oBAAIpC,UAAU,iBAAd,mC,GAvBDyB,aCIlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.05fcc88a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    if(true) {\n        throw new Error('Nooooo!');\n    }\n    return (\n        <ul>\n            <li>\n                {robots.map(robot => {\n                    return <Card\n                        key={robot.id}\n                        name={robot.name}\n                        email={robot.email}\n                        id={robot.id}\n                    />\n                })}\n            </li>\n        </ul>\n    )\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return (\n        <div >\n            <input\n                className=\"pa3 br3 ba dib b--purple\"\n                type=\"search\"\n                placeholder=\"Enter the robot name\"\n                onChange={searchChange}\n            />\n        </div>\n\n    )\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = ({children}) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid', height: '800px'}}>{children}</div>\n    );\n}\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            logErrors: [],\n        }\n    }\n\n    //лог ошибок\n    logComponentStackToMyService = (errorInfo) => {\n        console.log(this.state.logErrors);\n        this.setState({\n            logErrors: [\n                ...this.state.logErrors,\n                errorInfo.toString()\n            ]\n        }, () => console.log('err', this.state.logErrors[0]))\n    }\n\n    componentDidCatch(error, info) {\n        console.log(info.componentStack)\n        this.logComponentStackToMyService(info.componentStack)\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n\n        if(this.state.hasError) {\n           // alert()\n            return <h1 className=\"light-green\">Ooops! Something went wrong...</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry'\nclass App extends Component {\n    constructor () {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: '',\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n    render() {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter( robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        if (!robots.length) {\n            return <h1 className=\"f1 light-green\">Loading robots...</h1>\n        } else {\n            return (\n                <div className=\"tc\">\n                    <h1 className=\"f1 light-green\">RoboFriends</h1>\n                        <SearchBox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }\n\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport 'tachyons';\n\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}