{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","robot","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","logComponentStackToMyService","errorInfo","console","log","state","logErrors","setState","toString","hasError","error","info","componentStack","this","Component","CHANGE_SEARCH_FIELD","App","fetch","response","json","users","onSearchChange","filteredRobots","filter","toLowerCase","includes","length","connect","dispatch","event","text","target","value","payload","initialState","seachField","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc71d622.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"tc bg-black light-green ma3 pa3 br3 ba dib b--purple shadow-5 grow\">\n            <img\n                src={`https://robohash.org/${id}?200x250\" alt=\"robots`}\n                alt=\"robot\"\n            />\n            <div>\n                <h2>{name}</h2>\n                <p className=\"ma0\">{email}</p>\n            </div>\n        </div>\n    )\n}\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    /*if(true) {\n        throw new Error('Nooooo!');\n    }*/\n    return (\n        <ul>\n            <li>\n                {robots.map(robot => {\n                    return <Card\n                        key={robot.id}\n                        name={robot.name}\n                        email={robot.email}\n                        id={robot.id}\n                    />\n                })}\n            </li>\n        </ul>\n    )\n}\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n    return (\n        <div >\n            <input\n                className=\"pa3 ma3 br3 ba dib b--purple\"\n                type=\"search\"\n                placeholder=\"Enter the robot name\"\n                onChange={searchChange}\n            />\n        </div>\n\n    )\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = ({children}) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid', height: '100vh'}}>{children}</div>\n    );\n}\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            logErrors: [],\n        }\n    }\n\n    //лог ошибок\n    logComponentStackToMyService = (errorInfo) => {\n        console.log(this.state.logErrors);\n        this.setState({\n            logErrors: [\n                ...this.state.logErrors,\n                errorInfo.toString()\n            ]\n        }, () => console.log('err', this.state.logErrors[0]))\n    }\n\n    componentDidCatch(error, info) {\n        console.log(info.componentStack)\n        this.logComponentStackToMyService(info.componentStack)\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n\n        if(this.state.hasError) {\n           // alert()\n            return <h1 className=\"light-green\">Ooops! Something went wrong...</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport {connect} from 'react-redux';\nimport {setSearchField} from '../actions';\n\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchField || '' //can be undefined\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)) //key name equals to method in App\n    }\n}\nclass App extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            robots: [],\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users}))\n    }\n\n\n    render() {\n\n        const {robots} = this.state;\n        const {searchField, onSearchChange} = this.props;\n        console.log(searchField, robots)\n        const filteredRobots = robots.filter( robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        console.log('filteredRobots', filteredRobots)\n        if (!robots.length) {\n            return <h1 className=\"f1 light-green\">Loading robots...</h1>\n        } else {\n            return (\n                <div className=\"tc\">\n                    <h1 className=\"f1 light-green\">RoboFriends</h1>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {CHANGE_SEARCH_FIELD} from './constants';\n\nexport const setSearchField = (text) => {\n    return {\n        type: CHANGE_SEARCH_FIELD,\n        payload: text\n    }\n};\n","import {CHANGE_SEARCH_FIELD} from './constants';\n\nconst initialState = {\n    seachField: '',\n}\n\nexport const searchRobots = (state = initialState, action={}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return {\n                ...state,\n                searchField: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\nimport 'tachyons';\n\nimport App from './containers/App';\nimport {searchRobots} from './reducers';\n\n\nconst store = createStore(searchRobots)\n\nReactDOM.render(\n      <Provider store={store}>\n          <App/>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}